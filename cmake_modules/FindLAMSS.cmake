find_library(LAMSS_PROTOBUF_LIBRARY NAMES lamss_protobuf
  DOC "The LAMSS Protobuf library"
  PATHS ${CMAKE_SOURCE_DIR}/../lamss/lib
)


find_library(LAMSS_HENRIK_UTIL_LIBRARY NAMES henrik_util
  DOC "The LAMSS Henrik Util library"
  PATHS ${CMAKE_SOURCE_DIR}/../lamss/lib
)
 
find_library(LAMSS_BELLHOP_TOOLS_LIBRARY NAMES bellhop_tools
  DOC "The LAMSS Bellhop tools library"
  PATHS ${CMAKE_SOURCE_DIR}/../lamss/lib
)

find_library(LAMSS_NEWMAT_LIBRARY NAMES newmat10D
  DOC "The LAMSS Newmat library"
  PATHS ${CMAKE_SOURCE_DIR}/../lamss/lib
)

find_library(LAMSS_ANRP_UTIL_LIBRARY NAMES anrp_util
  DOC "The LAMSS ANRP Util library"
  PATHS ${CMAKE_SOURCE_DIR}/../lamss/lib
)

find_path(LAMSS_INCLUDE_DIR lamss/version.h
  PATHS ${CMAKE_SOURCE_DIR}/../lamss/include)

mark_as_advanced(LAMSS_INCLUDE_DIR 
  LAMSS_HENRIK_UTIL_LIBRARY
  LAMSS_ANRP_UTIL_LIBRARY
  LAMSS_NEWMAT_LIBRARY 
  LAMSS_BELLHOP_TOOLS_LIBRARY
  )

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(LAMSS DEFAULT_MSG
  LAMSS_INCLUDE_DIR
  LAMSS_PROTOBUF_LIBRARY
  LAMSS_HENRIK_UTIL_LIBRARY
  LAMSS_ANRP_UTIL_LIBRARY
  LAMSS_NEWMAT_LIBRARY 
  LAMSS_BELLHOP_TOOLS_LIBRARY
  )

if(LAMSS_FOUND)
  set(LAMSS_INCLUDE_DIRS ${LAMSS_INCLUDE_DIR})
  set(LAMSS_LIBRARIES
    ${LAMSS_PROTOBUF_LIBRARY}
    ${LAMSS_HENRIK_UTIL_LIBRARY}
    ${LAMSS_ANRP_UTIL_LIBRARY}
    ${LAMSS_NEWMAT_LIBRARY}
    ${LAMSS_BELLHOP_TOOLS_LIBRARY}
)
endif()
